knitr::opts_chunk$set(echo = FALSE, fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(ISLR, tidyverse, data.table) # add the packages needed
package("ISLR")
pacman::p_load(ISLR, tidyverse, data.table)
data("Auto")
force(Auto)
summarise(Auto)
summary(Auto)
colSums(is.na(Auto))
str(Auto)
summary(Auto)
str(Auto)
?ISLR::Auto
Auto <- as.factor(Auto$origin)
str(Auto)
#Load auto data and get summary statistics
data("Auto")
Auto$origin <- as.factor(Auto$origin)
str(Auto)
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
Auto$origin <- as.factor(Auto$origin)
mpg_time <- ggplot(Auto, aes(x=year, y=mpg)) +
geom_point()
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=mpg)) +
geom_point() +
geom_line()
mpg_time
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
View(Auto)
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line()
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Table 1", subtitle="Average MPG over time by region of origin")
mpg_time
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 1", subtitle="Average MPG over time by region of origin")
mpg_time
Auto$year <- factor(Auto$year)
str(Auto)
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 1", subtitle="Average MPG over time by region of origin")
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 1", subtitle="Average MPG over time by region of origin")
mpg_time
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 1", subtitle="Average MPG over time by region of origin")
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.1", subtitle="Average MPG over time by region of origin") +
x_lim(70, 82)
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.1", subtitle="Average MPG over time by region of origin") +
xlim(70, 82)
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.1", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13)
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.1", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_light()
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.1", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.1:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
number_time <- ggplot(Auto, aes(x=year, y=name, color=origin)) +
geom_bar(stat = "identity")
number_time
number_time <- ggplot(Auto, aes(x=year, y=name, color=origin)) +
geom_bar(stat = "count")
number_time
number_time <- ggplot(Auto, aes(x=year, y=name, color=origin)) +
geom_bar()
number_time
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(num_cars = n_distinct(name))
View(Auto)
number_time <- ggplot(Auto, aes(x=year, y=num_cars, color=origin)) +
geom_bar()
number_time
number_time <- ggplot(Auto, aes(x=year, y=num_cars, color=origin)) +
geom_bar(stat = "identity")
number_time
number_time <- ggplot(Auto, aes(x=year, y=num_cars, fill=origin)) +
geom_bar(stat = "identity")
number_time
number_time <- ggplot(Auto, aes(y=num_cars, fill=origin)) +
geom_bar()
number_time
table(Auto$num_cars)
View(Auto)
number_time <- ggplot(Auto, aes(y=num_cars, fill=origin)) +
geom_histogram()
number_time
number_time <- ggplot(Auto, aes(x=year, y=num_cars, fill=origin)) +
geom_histogram()
number_time
number_time <- ggplot(Auto, aes(x=year, y=num_cars, fill=origin)) +
geom_bar(stat="identity")
number_time
number_time <- ggplot(Auto, aes(x=year, y=name, fill=origin)) +
geom_bar(stat="identity")
number_time
number_time <- ggplot(Auto, unique(name), aes(x=as.factor(year), fill=origin)) +
stat_bin
number_time <- ggplot(Auto, unique(name), aes(x=as.factor(year), fill=origin)) +
stat_bin()
number_time <- ggplot(Auto, aes(x=year, y=name, fill=origin)) +
stat_bin()
number_time
number_time <- ggplot(Auto, aes(x=year, fill=origin)) +
stat_bin(y=name)
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(., aes(x=year, y=num)) +
geom_bar(stat="identity")
number_time
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(., aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity")
number_time
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(., aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.2:", subtitle="Number of unique car models over time by region or origin") +
theme_bw()
number_time
Auto %>% group_by(origin, year) %>% table(origin, year, num)
Auto %>% group_by(origin, year) %>% table(origin)
Auto %>% group_by(origin, year) %>% table(num)
Auto %>% group_by(origin, year) %>% table(n_distinct(name))
View(Auto)
n_distinct(Auto$name)
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration)) +
geom_point() + geom_line()
weight_accel
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration)) +
geom_point() +
geom_smooth()
weight_accel
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth()
weight_accel
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth(method = "lm")
weight_accel
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
knitr::opts_chunk$set(echo = FALSE, fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(ISLR, tidyverse, data.table) # add the packages needed
regress_mpgyrhorse <- glm(data=Auto, mpg ~ year + horsepower, family=gaussian)
summary(regress_mpgyrhorse)
confint(regress_mpgyrhorse)
regress_mgpyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mgpyr)
confint(regress_mgpyr)
final_model <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin)
summary(final_model)
final_model <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year*origin)
summary(final_model)
final_model <- lm(data=Auto, mpg ~ displacement + horsepower + weight*cylinders + acceleration + year*origin)
summary(final_model)
weight_mpg <- ggplot(Auto, aes(x=weight, y=mpg, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_mpg
final_model <- lm(data=Auto, mpg ~ displacement + horsepower + weight + cylinders + acceleration + year*origin)
summary(final_model)
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
mpg_horse
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
Auto <- Auto %>% mutate(horsepower_transform = 1/horsepower)
mpg_horse_transform <- ggplot(Auto, aes(x=horsepower_transform, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="1/Horsepower", title="Figure 3.5:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse_transform
#Look at number of vehicles by region over time
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(., aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
final_model <- lm(data=Auto, mpg ~ displacement + weight + cylinders + acceleration + year*origin)
summary(final_model)
final_model <- lm(data=Auto, mpg ~ displacement + weight*cylinders + acceleration + year*origin)
summary(final_model)
final_model <- lm(data=Auto, mpg ~ weight*cylinders + acceleration + year*origin)
summary(final_model)
model1 <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin)
summary(model1)
model2 <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year*origin)
summary(model2)
#First, try a model with all variables includes as predictors. This model has a fairly high R2 but isn't parsimonious, and has non-significant terms.
model1 <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin)
summary(model1)
#Data exploration showed that cars from different regions have different MPG, and that MPG increased over time. The rates of MPG change over time look slightly different by region - trying an interaction term.
model2 <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year*origin)
summary(model2)
model3 <- lm(data=Auto, mpg ~ cylinders*weight + displacement + horsepower + acceleration + year*origin)
summary(model3)
model4 <- lm(data=Auto, mpg ~ cylinders*weight + displacement + horsepower + year*origin)
summary(model4)
#First, try a model with all variables includes as predictors. This model has a fairly high R2 but isn't parsimonious, and has non-significant terms.
model1 <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin)
summary(model1)
#Data exploration showed that cars from different regions have different MPG, and that MPG increased over time. The rates of MPG change over time look slightly different by region - trying an interaction term.
model2 <- lm(data=Auto, mpg ~ cylinders + displacement + horsepower + weight + acceleration + year*origin)
summary(model2)
#We also saw in data exploration that as weight increases, the number of cylinders increases. Weight is significantly related to MPG - maybe there is an interaction effect
model3 <- lm(data=Auto, mpg ~ cylinders*weight + displacement + horsepower + acceleration + year*origin)
summary(model3)
#Remove remaining non-significant variables
model4 <- lm(data=Auto, mpg ~ cylinders*weight + displacement + horsepower + year*origin)
summary(model4)
#Displacement and horsepower are significant, but have a small absolute effect estimate on MPG - try removing them and comparing this with the previous model.
model5 <- lm(data=Auto, mpg ~ cylinders*weight + displacement + horsepower + year*origin)
summary(model5)
model5 <- lm(data=Auto, mpg ~ cylinders*weight + year*origin)
summary(model5)
anova(model4, model5)
anova(model5, model4)
summary(model4)
#Displacement and horsepower are significant, but have a small absolute effect estimate on MPG - try removing them and comparing this with the previous model.
model5 <- lm(data=Auto, mpg ~ cylinders*weight + year*origin)
summary(model5)
final_model <- lm(data=Auto, mpg ~ weight*cylinders + year*origin)
summary(final_model)
#Fitting predicted values
pred_int <- predict(final_model, interval="prediction")
#Linearity
plot(final_model$fitted, final_model$residuals,
pch  = 16,
main = "Residual plot")
abline(h=0, lwd=4, col="red")
qqnorm(final_model$residuals)
qqline(final_model$residuals, lwd=4, col="blue")
Auto <- Auto %>% mutate(mgp_log = log(mpg))
final_model_2 <- lm(data=Auto, mpg_log ~ weight*cylinders + year*origin)
Auto <- Auto %>% mutate(mpg_log = log(mpg))
final_model_2 <- lm(data=Auto, mpg_log ~ weight*cylinders + year*origin)
summary(final_model_2)
qqnorm(final_model_2$residuals)
qqline(final_model_2$residuals, lwd=4, col="blue")
Auto <- Auto %>% mutate(mpg_log = log(mpg), mpg_sqrt = sqrt(mpg))
final_model_3 <- lm(data=Auto, mpg_sqrt ~ weight*cylinders + year*origin)
summary(final_model_3)
qqnorm(final_model_3$residuals)
qqline(final_model_3$residuals, lwd=4, col="blue")
summary(final_model_2)
qqnorm(final_model_2$residuals)
qqline(final_model_2$residuals, lwd=4, col="blue")
