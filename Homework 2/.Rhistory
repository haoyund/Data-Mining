knitr::opts_chunk$set(echo = FALSE, fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(ISLR, tidyverse, data.table, stargazer, broom, ggrepel, devtools, htmltools)
output_format <- ifelse(is.null(knitr::opts_knit$get("rmarkdown.pandoc.to")),
"text", knitr::opts_knit$get("rmarkdown.pandoc.to"))
devtools::install_github("vqv/ggbiplot")
num_gene <- ncol(brca)
brca <- fread("data/brca_subtype.csv")
dim(brca)
names(brca)[1:20]
table(brca$BRCA_Subtype_PAM50)
brca$BRCA_Subtype_PAM50 <- as.factor(brca$BRCA_Subtype_PAM50)
# get the sub-type information
brca_subtype <- brca$BRCA_Subtype_PAM50
brca <- brca[,-1]
num_gene <- ncol(brca)
# randomly select 10 gene
set.seed(5)
sample_idx <- sample(num_gene, 5)
# plot count number histogram for each gene
brca %>%
select(all_of(sample_idx)) %>%      # select column by index
pivot_longer(cols = everything()) %>%     # for facet(0)
ggplot(aes(x = value, y = ..density..)) +
geom_histogram(aes(fill = name)) +
facet_wrap(~name, scales = "free") +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Figure 1.1:",
subtitle = "Histogram of 5 Random Genes")
knitr::opts_chunk$set(echo = FALSE, fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(ISLR, tidyverse, data.table, stargazer, broom, ggrepel, devtools, htmltools, tidyselect)
output_format <- ifelse(is.null(knitr::opts_knit$get("rmarkdown.pandoc.to")),
"text", knitr::opts_knit$get("rmarkdown.pandoc.to"))
num_gene <- ncol(brca)
# randomly select 10 gene
set.seed(5)
sample_idx <- sample(num_gene, 5)
# plot count number histogram for each gene
brca %>%
select(all_of(sample_idx)) %>%      # select column by index
pivot_longer(cols = everything()) %>%     # for facet(0)
ggplot(aes(x = value, y = ..density..)) +
geom_histogram(aes(fill = name)) +
facet_wrap(~name, scales = "free") +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Figure 1.1:",
subtitle = "Histogram of 5 Random Genes")
knitr::opts_chunk$set(echo = FALSE, fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(tidyverse, cluster, factoextra, data.table, irlba, pheatmap, ISLR, stargazer, broom, ggrepel, devtools, htmltools, tidyselect)
output_format <- ifelse(is.null(knitr::opts_knit$get("rmarkdown.pandoc.to")),
"text", knitr::opts_knit$get("rmarkdown.pandoc.to"))
num_gene <- ncol(brca)
num_gene
set.seed(5)
sample_idx <- sample(num_gene, 5)
brca <- fread("data/brca_subtype.csv")
# get the sub-type information
brca_subtype <- brca$BRCA_Subtype_PAM50
brca <- brca[,-1]
brca <- fread("data/brca_subtype.csv")
# get the sub-type information
brca_subtype <- brca$BRCA_Subtype_PAM50
brca <- brca[,-1]
dim(brca)
names(brca)[1:20]
table(brca$BRCA_Subtype_PAM50)
brca$BRCA_Subtype_PAM50 <- as.factor(brca$BRCA_Subtype_PAM50)
# get the sub-type information
brca_subtype <- brca$BRCA_Subtype_PAM50
brca <- brca[,-1]
brca <- fread("data/brca_subtype.csv")
dim(brca)
names(brca)[1:20]
table(brca$BRCA_Subtype_PAM50)
brca$BRCA_Subtype_PAM50 <- as.factor(brca$BRCA_Subtype_PAM50)
# get the sub-type information
brca_subtype <- brca$BRCA_Subtype_PAM50
brca <- brca[,-1]
num_gene <- ncol(brca)
# randomly select 5 gene
set.seed(5)
sample_idx <- sample(num_gene, 5)
# plot count number histogram for each gene
brca %>%
select(all_of(sample_idx)) %>%      # select column by index
pivot_longer(cols = everything()) %>%     # for facet(0)
ggplot(aes(x = value, y = ..density..)) +
geom_histogram(aes(fill = name)) +
facet_wrap(~name, scales = "free") +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Figure 1.1:",
subtitle = "Histogram of 5 Random Genes")
#Look at number of vehicles by region over time
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(., aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Look at number of vehicles by region over time
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(data = Auto, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
#Look at number of vehicles by region over time
number_time <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ggplot(., aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Look at number of vehicles by region over time
Auto <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_nume <-  ggplot(data = Auto, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_nume <-  ggplot(data = Auto, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
View(Auto_names)
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity", inherit.aes = FALSE) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ungroup()
View(Auto_names)
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ungroup(origin, year)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ungroup(origin, year)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity", inherit.aes = FALSE, aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot() +
geom_bar(stat="identity", inherit.aes = FALSE, aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", inherit.aes = FALSE, aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
View(Auto_names)
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names) +
geom_bar(aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
unlink("hw2_sp2022_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
knitr::opts_chunk$set(echo = TRUE)
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(tidyverse, cluster, factoextra, data.table, irlba, pheatmap, ISLR, stargazer, broom, ggrepel, devtools, htmltools, tidyselect)
number_time <-  ggplot() +
geom_bar(data = Auto_names, stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot() +
geom_bar(data = Auto_names, stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
regress_mpgyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mgpyr)
regress_mpgyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mgpyr)
regress_mpgyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mpgyr)
confint(regress_mpgyr)
stargazer(regress_mpgyr, title = "Table 3.1: Model Regressing Year on MPG", ci = TRUE)
stargazer(regress_mpgyr, type = "text", title = "Table 3.1: Model Regressing Year on MPG", ci = TRUE)
