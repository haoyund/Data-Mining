theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity", inherit.aes = FALSE) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ungroup()
View(Auto_names)
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ungroup(origin, year)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name)) %>%
ungroup(origin, year)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat="identity", inherit.aes = FALSE, aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot() +
geom_bar(stat="identity", inherit.aes = FALSE, aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", inherit.aes = FALSE, aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
View(Auto_names)
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names) +
geom_bar(aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
unlink("hw2_sp2022_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Load auto data and get summary statistics
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
knitr::opts_chunk$set(echo = TRUE)
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(tidyverse, cluster, factoextra, data.table, irlba, pheatmap, ISLR, stargazer, broom, ggrepel, devtools, htmltools, tidyselect)
number_time <-  ggplot() +
geom_bar(data = Auto_names, stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot() +
geom_bar(data = Auto_names, stat="identity", aes(x=year, y=num, fill=origin)) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
regress_mpgyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mgpyr)
regress_mpgyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mgpyr)
regress_mpgyr <- glm(data=Auto, mpg ~ year, family=gaussian)
summary(regress_mpgyr)
confint(regress_mpgyr)
stargazer(regress_mpgyr, title = "Table 3.1: Model Regressing Year on MPG", ci = TRUE)
stargazer(regress_mpgyr, type = "text", title = "Table 3.1: Model Regressing Year on MPG", ci = TRUE)
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(tidyverse, cluster, factoextra, data.table, irlba, pheatmap, ISLR, stargazer, broom, ggrepel, devtools, htmltools, tidyselect)
self_esteem <- read.csv("Data/NLSY79.csv")
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot() +
geom_bar(data = Auto_names, stat="identity", aes(x=year, y=num, fill=origin), inherit.aes = FALSE) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
number_time <-  ggplot() +
geom_bar(data = Auto_names, stat="identity", aes(x=year, y=num, color=origin), inherit.aes = FALSE) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Load auto data and get summary statistics
rm(list = ls())
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
Auto_names <- Auto %>%
group_by(origin, year) %>%
summarise(num=n_distinct(name))
number_time <-  ggplot(data = Auto_names) +
geom_bar(stat="identity", mapping = aes(x=year, y=num, fill=origin), inherit.aes = FALSE) +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
View(Auto_names)
number_time <-  ggplot(data = Auto_namesaes(x=year, y=num, fill=origin)) +
geom_bar() +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar() +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat = "identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
View(Auto_names)
#Load auto data and get summary statistics
rm(list = ls())
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
Auto_names <- Auto %>%
group_by(origin, year) %>%
mutate(num=n_distinct(name)) %>%
ungroup()
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat = "identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
View(Auto_names)
Auto_names <- Auto %>%
group_by(origin, year) %>%
mutate(num=n_distinct(name))
Auto_names <- Auto %>%
group_by(origin, year) %>%
mutate(num=n_distinct(name)) %>%
distinct(year, origin, .keep_all = TRUE)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat = "identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
# Inializing variables. Note b_1, upper_ci, lower_ci are vectors
x <- seq(0, 1, length = 40)
n_sim <- 100              # number of simulations
b1 <- 0                   # n_sim many LS estimates of beta_1 (=1.2). Initialize to 0 for now
upper_ci <- 0             # upper bound for beta_1. Initialize to 0 for now.
lower_ci <- 0             # lower bound for beta_1. Initialize to 0 for now.
t_star <- qt(0.975, 38)   # Food for thought: why 38 instead of 40? What is t_star?
# Perform the simulation
for (i in 1:n_sim){
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
lse <- lm(y ~ x)
lse_output <- summary(lse)$coefficients
se <- lse_output[2, 2]
b1[i] <- lse_output[2, 1]
upper_ci[i] <- b1[i] + t_star * se
lower_ci[i] <- b1[i] - t_star * se
}
results <- as.data.frame(cbind(se, b1, upper_ci, lower_ci))
# remove unecessary variables from our workspace
rm(se, b1, upper_ci, lower_ci, x, n_sim, b1, t_star, lse, lse_out)
# Inializing variables. Note b_1, upper_ci, lower_ci are vectors
x <- seq(0, 1, length = 40)
n_sim <- 100              # number of simulations
b1 <- 0                   # n_sim many LS estimates of beta_1 (=1.2). Initialize to 0 for now
upper_ci <- 0             # upper bound for beta_1. Initialize to 0 for now.
lower_ci <- 0             # lower bound for beta_1. Initialize to 0 for now.
t_star <- qt(0.975, 38)   # Food for thought: why 38 instead of 40? What is t_star?
# Perform the simulation
for (i in 1:n_sim){
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
lse <- lm(y ~ x)
lse_output <- summary(lse)$coefficients
se <- lse_output[2, 2]
b1[i] <- lse_output[2, 1]
upper_ci[i] <- b1[i] + t_star * se
lower_ci[i] <- b1[i] - t_star * se
}
results <- as.data.frame(cbind(se, b1, upper_ci, lower_ci))
# remove unecessary variables from our workspace
rm(se, b1, upper_ci, lower_ci, x, n_sim, t_star, lse, lse_output)
#plot b1
results %>%
ggplot(aes(x = b1)) +
geom_histogram(aes(y = after_stat(density)), bins = 30) +
stat_function(
fun = dnorm,
args = list(mean = mean(results$b1), sd = sd(results$b1)),
lwd = 2,
col = 'red'
)
View(results)
# Inializing variables. Note b_1, upper_ci, lower_ci are vectors
x <- seq(0, 1, length = 40)
n_sim <- 100              # number of simulations
b1 <- 0                   # n_sim many LS estimates of beta_1 (=1.2). Initialize to 0 for now
upper_ci <- 0             # upper bound for beta_1. Initialize to 0 for now.
lower_ci <- 0             # lower bound for beta_1. Initialize to 0 for now.
t_star <- qt(0.975, 38)   # Food for thought: why 38 instead of 40? What is t_star?
# Perform the simulation
for (i in 1:n_sim){
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
lse <- lm(y ~ x)
lse_output <- summary(lse)$coefficients
se <- lse_output[2, 2]
b1[i] <- lse_output[2, 1]
upper_ci[i] <- b1[i] + t_star * se
lower_ci[i] <- b1[i] - t_star * se
}
results <- as.data.frame(cbind(se, b1, upper_ci, lower_ci))
# remove unecessary variables from our workspace
rm(se, upper_ci, lower_ci, x, n_sim, t_star, lse, lse_output)
View(results)
#plot b1
results %>%
ggplot(aes(x = b1)) +
geom_histogram(aes(y = after_stat(density)), bins = 30) +
stat_function(
fun = dnorm,
args = list(mean = mean(results$b1), sd = sd(results$b1)),
lwd = 2,
col = 'red'
)
# Inializing variables. Note b_1, upper_ci, lower_ci are vectors
x <- seq(0, 1, length = 40)
n_sim <- 100              # number of simulations
b1 <- 0                   # n_sim many LS estimates of beta_1 (=1.2). Initialize to 0 for now
upper_ci <- 0             # upper bound for beta_1. Initialize to 0 for now.
lower_ci <- 0             # lower bound for beta_1. Initialize to 0 for now.
t_star <- qt(0.975, 38)   # Food for thought: why 38 instead of 40? What is t_star?
# Perform the simulation
for (i in 1:n_sim){
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
lse <- lm(y ~ x)
lse_output <- summary(lse)$coefficients
se <- lse_output[2, 2]
b1[i] <- lse_output[2, 1]
upper_ci[i] <- b1[i] + t_star * se
lower_ci[i] <- b1[i] - t_star * se
}
results <- as.data.frame(cbind(se, b1, upper_ci, lower_ci))
# remove unecessary variables from our workspace
rm(se, b1, upper_ci, lower_ci, x, n_sim, t_star, lse, lse_output)
#plot b1
results %>%
ggplot(aes(x = b1)) +
geom_histogram(aes(y = after_stat(density)), bins = 30) +
stat_function(
fun = dnorm,
args = list(mean = mean(results$b1), sd = sd(results$b1)),
lwd = 2,
col = 'red'
)
#plot b1
results %>%
ggplot() +
geom_histogram(aes(y = after_stat(density)), bins = 30) +
stat_function(
fun = dnorm,
args = list(mean = mean(results$b1), sd = sd(results$b1)),
lwd = 2,
col = 'red'
)
#plot b1
results %>%
ggplot() +
geom_histogram(aes(x=b1, y = after_stat(density)), bins = 30) +
stat_function(
fun = dnorm,
args = list(mean = mean(results$b1), sd = sd(results$b1)),
lwd = 2,
col = 'red'
)
#plot1
results <- arrange(results, upper_ci)
results$num <- seq(1,100)
results <- results %>% mutate(contains_beta = ifelse(upper_ci>1.2 & lower_ci<1.2, 1, 0))
table(results$contains_beta)
plot <- ggplot(data=results) +
geom_line(data=results, aes(x=num, y=upper_ci)) +
geom_line(data=results, aes(x=num, y=lower_ci)) +
geom_line(aes(x=num, y=1.2), color="blue") +
labs(title = "Figure 4.3.1: ", subtitle = "Graph of 95% CIs for each simulation", y = "Value of Beta1", x = "Simulation number")
plot
#plot2
ggplot(results, aes(num, b1)) + geom_point() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci)) +
geom_hline(yintercept = 1.2, color = "blue") +
labs(title = "Figure 4.3.2: ", subtitle = "Graph of 95% CIs for each simulation", y = "Value of Beta1", x = "Simulation number")
knitr::opts_chunk$set(fig.width=8, fig.height=4)
options(scipen = 0, digits = 3)  # controls base R output
# check if you have ISLR package, if not, install it
if(!require('pacman')) {install.packages('pacman')}
pacman::p_load(tidyverse, cluster, factoextra, data.table, irlba, pheatmap, ISLR, stargazer, broom, ggrepel, devtools, htmltools, tidyselect)
#Load auto data and get summary statistics
rm(list = ls())
data("Auto")
str(Auto)
summary(Auto)
colSums(is.na(Auto))
n_distinct(Auto$name)
#Origin should be treated as a factor: 1=American, 2=European, 3=Japanese.
Auto$origin <- factor(Auto$origin, levels = c("1", "2", "3"), labels = c("American", "European", "Japanese"))
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
mutate(num=n_distinct(name)) %>%
distinct(year, origin, .keep_all = TRUE)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat = "identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
#Look at number of vehicles by region over time
Auto_names <- Auto %>%
group_by(origin, year) %>%
mutate(num=n_distinct(name)) %>%
distinct(year, origin, .keep_all = TRUE)
number_time <-  ggplot(data = Auto_names, aes(x=year, y=num, fill=origin)) +
geom_bar(stat = "identity") +
labs(y="Number of unique models", x="Year", title="Figure 3.1:", subtitle="Number of unique car models over time by region of origin") +
theme_bw()
number_time
#Look at average MPH over time by origin
Auto <- Auto %>%
group_by(origin, year) %>%
mutate(avg_mpg = mean(mpg))
mpg_time <- ggplot(Auto, aes(x=year, y=avg_mpg, color=origin)) +
geom_point() + geom_line() +
labs(y="Average MPG", x="Year", title="Figure 3.2:", subtitle="Average MPG over time by region of origin") +
scale_x_continuous(n.breaks = 13) +
theme_bw()
mpg_time
#Look at weight versus acceleration
weight_accel <- ggplot(Auto, aes(x=weight, y=acceleration, color=cylinders)) +
geom_point() +
geom_smooth() +
labs(y="Time to accelerate from 0 to 60 mph (seconds)", x="Vehicle weight (pounds)", title="Figure 3.3:", subtitle="Relationship between weight of car and acceleration, by number of cylinders") +
theme_bw()
weight_accel
#Look at weight versus acceleration
mpg_horse <- ggplot(Auto, aes(x=horsepower, y=mpg)) +
geom_point() +
geom_smooth() +
labs(y="Miles per gallon", x="Horsepower", title="Figure 3.4:", subtitle="Relationship between horsepower and miles per gallon") +
theme_bw()
mpg_horse
